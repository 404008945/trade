<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xishan.store.trade.server.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.xishan.store.trade.api.model.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="payment_type" jdbcType="TINYINT" property="paymentType" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, `type`, customer_id, amount, payment_type, status, create_time,version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
   <include refid="Base_Column_List"/>
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>


  <select id="selectByOrderRequest" parameterType="com.xishan.store.trade.api.request.ListOrderRequest" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `order`
    where    1=1
    <if test="code != null">
    and  code = #{code,jdbcType=VARCHAR}
   </if>
    <if test="type != null">
      and type = #{type,jdbcType=TINYINT}
    </if>
    <if test="customerId != null">
      and  customer_id = #{customerId,jdbcType=INTEGER}
    </if>
    <if test="amount != null">
      and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="paymentType != null">
      and  payment_type   #{paymentType,jdbcType=TINYINT}
    </if>
    <if test="status != null">
      and  status = #{status,jdbcType=TINYINT}
    </if>
    <if test="startTime != null">
      and  create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
    </if>
    <if test="endTime != null">
      and  create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
    </if>
  </select>

  <select id="pagingIds"  resultType="java.lang.Integer">
    select
    id
    from `order`
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xishan.store.trade.api.model.Order" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into `order` (id, code, `type`,
      customer_id, amount, payment_type, 
      status, create_time,version)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{customerId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{paymentType,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT},now(), #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xishan.store.trade.api.model.Order">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xishan.store.trade.api.model.Order">
    update `order`
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>,
      version = version + 1
    </set>
    where id = #{id,jdbcType=INTEGER} and  version = #{version,jdbcType=INTEGER}
  </update>


  <update id="batchUpdate" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
    update `order`
    <set>
      <if test="item.code != null">
        code = #{item.code,jdbcType=VARCHAR},
      </if>
      <if test="item.type != null">
        `type` = #{item.type,jdbcType=TINYINT},
      </if>
      <if test="item.customerId != null">
        customer_id = #{item.customerId,jdbcType=INTEGER},
      </if>
      <if test="item.amount != null">
        amount = #{item.amount,jdbcType=DECIMAL},
      </if>
      <if test="item.paymentType != null">
        payment_type = #{item.paymentType,jdbcType=TINYINT},
      </if>
      <if test="item.status != null">
        status = #{item.status,jdbcType=TINYINT},
      </if>
      <if test="item.createTime != null">
        create_time = #{item.createTime,jdbcType=TIMESTAMP},
      </if>
      version = version + 1
    </set>
    where id = #{item.id,jdbcType=INTEGER} and  version = #{item.version,jdbcType=INTEGER}
    </foreach>
  </update>

  <update id="updateByPrimaryKey" parameterType="com.xishan.store.trade.api.model.Order">
    update `order`
    set code = #{code,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=TINYINT},
      customer_id = #{customerId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      version = version + 1
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>